{"version":3,"sources":["Components/Item/Category.js","Components/ItemList/CategoryList.js","Services/firebase/firebase.js","Components/ItemListContainer/ItemCategoryContainer.js","Loader.js","Components/Cart/Cart.js","Context/cartContext.js","Components/NavBar/CardWidget.js","Components/NavBar/NavBar.jsx","Components/Item/Item.js","Components/ItemList/ItemList.js","Components/ItemListContainer/ItemListContainer.js","Components/ItemCount/ItemCount.js","Components/Item/ItemDetail.js","Components/ItemListContainer/ItemDetailContainer.js","Components/FormBuy/FormBuy.js","Components/PurchaseCompleted/PurchaseCompleted.js","Components/PrivateRoute/PrivateRoute.js","Components/Item/History.js","Components/ItemList/HistoryList.js","Components/MyHistory/MyHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Category","categoria","className","to","id","description","CategoryList","categorias","map","category","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","dataBase","getFirestore","ItemCategoryContainer","useState","categories","setCategories","useEffect","getDocs","collection","then","QuerySnapshot","docs","doc","data","catch","error","console","log","finally","Loader","props","tipo","Cart","useContext","cartContext","carrito","calculatePrecioTotal","emptyCart","removeProducto","parseNumber","processing","setProcessing","navigate","useNavigate","CartEmpty","src","CartFull","scope","product","name","cantidad","price","onClick","colspan","setUpOrder","setTimeout","length","Context","React","createContext","AddCartContextProvider","children","setCarrito","order","setOrder","email","setEmail","calculateCantTotal","total","i","objeto_producto","parseInt","precioTotal","precio","precioPars","toString","slice","Provider","value","addCarrito","prodId","prodName","prodPrice","prodImg","prodQuantity","EstaEnElCarrito","some","prod","isInCart","productoDuplicado","find","elemento","cartSinRepetido","filter","img","carritoFiltrado","element","window","localStorage","clear","loadOrder","saveEmail","CardWidget","alt","NavBar","href","role","Item","producto","classNameName","detail","ItemList","productos","ItemListContainer","products","setProducts","loading","setLoading","categoryId","useParams","query","where","a","orderBy","ItemCount","onAdd","stock","initial","contador","setContador","ItemDetail","item","setCounter","btnAgregar","setBtnAgregar","ButtonViewCart","NoStock","proc","memory","disk","fecha","Date","toLocaleString","alert","agregarCarrito","ItemDetailContainer","setItem","paramId","getDoc","FormBuy","buying","setBuying","phone","comment","contact","setContact","handleInputChange","event","target","onSubmit","preventDefault","newOrder","date","Timestamp","fromDate","batch","writeBatch","outOfStock","forEach","update","push","addDoc","commit","type","placeholder","onChange","required","for","PurchaseCompleted","PrivateRoute","privType","History","orden","HistoryList","ordenes","MyHistory","orders","setOrders","App","path","greeting","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c50dff8.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Item.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Category = ({ categoria }) => {\r\n\r\n    return (\r\n        <>\r\n            <li>\r\n                <Link className=\"listCategorias\" to={`/category/${categoria.id}`}>\r\n                    {categoria.description}\r\n                </Link>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","import React from 'react'\r\nimport Category from '../Item/Category'\r\n\r\nconst CategoryList = ({ categorias }) => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {categorias.map(category =>\r\n                    <Category key={category.id} categoria={category} />\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryList\r\n","import {initializeApp} from 'firebase/app'\r\nimport { getFirestore } from 'firebase/firestore'\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId\r\n  };\r\n\r\nconst app = initializeApp(firebaseConfig)\r\n\r\nexport const dataBase = getFirestore(app)","import { useState, useEffect } from \"react\"\r\nimport CategoryList from \"../ItemList/CategoryList\"\r\nimport { dataBase } from '../../Services/firebase/firebase'\r\nimport { collection, getDocs, query, where, orderBy } from 'firebase/firestore'\r\n\r\nconst ItemCategoryContainer = () => {\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    useEffect(() => {\r\n        getDocs(collection(dataBase, 'categorias')).then((QuerySnapshot) => {\r\n\r\n            const categories = QuerySnapshot.docs.map(doc => {\r\n\r\n                return { id: doc.id, ...doc.data() }\r\n            })\r\n\r\n            setCategories(categories)\r\n        }).catch((error) => {\r\n            console.log('Error conexion firebase', error)\r\n        }).finally(() => {\r\n            console.log('finalizo llamada firebase')\r\n        })\r\n\r\n        return (() => {\r\n            setCategories([])\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CategoryList categorias={categories} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCategoryContainer\r\n","import React from 'react';\r\nimport './Loader.css'\r\n\r\nconst Loader = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"loader\"></div>\r\n            {props.tipo === 'preparando' ? <h3 className=\"loaderDesc\">Preparando todo para tu compra...</h3> \r\n            : props.tipo === 'comprando' ? <h3 className=\"loaderDesc\">Finalizando tu compra...</h3> \r\n            : <h3 className=\"loaderDesc\">Cargando...</h3>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react'\r\nimport { useContext, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport cartContext from '../../Context/cartContext'\r\nimport './Cart.scss'\r\nimport { dataBase } from '../../Services/firebase/firebase'\r\nimport { collection, addDoc, writeBatch, getDoc, doc } from 'firebase/firestore'\r\nimport Loader from '../../Loader';\r\n\r\nconst Cart = () => {\r\n\r\n    const { carrito, calculatePrecioTotal, emptyCart, removeProducto, parseNumber } = useContext(cartContext)\r\n\r\n    const [processing, setProcessing] = useState(false)\r\n\r\n    let navigate = useNavigate()\r\n\r\n    const CartEmpty = () => {\r\n        return (\r\n            <div>\r\n                <h2 className='tituloCartVacio'>¡El carrito de compras está vacío!</h2>\r\n                <img className='avisoCart' src='https://res.cloudinary.com/dw94zgfgu/image/upload/v1640988714/cartEmpty_kplei5.png'></img>\r\n                <div>\r\n                    <Link to={'/'}>\r\n                        <button className='btnStartBuy'>Empezar a comprar</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const CartFull = () => {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-light table-hover table-carrito\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className='table-dark table-tit-prod' scope=\"col\">Producto</th>\r\n                            <th className='table-dark table-tit-cant' scope=\"col\">Cantidad</th>\r\n                            <th className='table-dark table-tit-prec' scope=\"col\">Precio</th>\r\n                            <th className='table-dark table-tit-stot' scope=\"col\">Subtotal</th>\r\n                            <th className='table-dark table-tit-tach' scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {carrito.map(product => {\r\n                            return (\r\n                                <tr>\r\n                                    <td className='prod-name'>{product.name}</td>\r\n                                    <td>{product.cantidad}</td>\r\n                                    <td className='prod-name'>$ {parseNumber(product.price)}</td>\r\n                                    <td className='prod-name'>$ {parseNumber(`${product.cantidad * product.price}`)}</td>\r\n                                    <td><img className='tachito' src='https://res.cloudinary.com/dw94zgfgu/image/upload/v1641066871/tachito_yzwc0i.svg'\r\n                                        onClick={() => removeProducto(product.id)}></img></td>\r\n\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        <tr>\r\n                            <td colspan=\"2\"></td>\r\n                            <td className='totalPrecio'>TOTAL</td>\r\n                            <td className='totalPrecio'>$ {calculatePrecioTotal()}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <button className='botonTerminar' onClick={() => setUpOrder()}>Comprar ahora</button>\r\n                <button className='botonVaciar' onClick={() => emptyCart()}>Vaciar carrito</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const setUpOrder = () => {\r\n\r\n        setProcessing(true)\r\n\r\n        setTimeout(() => {\r\n            navigate('/formBuy')\r\n            setProcessing(false)\r\n        }, 3000)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {processing ? <Loader tipo='preparando' /> :\r\n                carrito.length > 0 ? <CartFull /> : <CartEmpty />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React, { useState } from 'react'\r\nimport Cart from '../Components/Cart/Cart'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport const AddCartContextProvider = ({ children }) => {\r\n\r\n    const [carrito, setCarrito] = useState([])\r\n    const [order, setOrder] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    /* FUNCIONES */\r\n    const isInCart = (prodId) => {\r\n\r\n        return carrito.some(prod => prod.id === prodId)\r\n    }\r\n\r\n    const removeProducto = (prodId) => {\r\n\r\n        const carritoFiltrado = carrito.filter(element => element.id != prodId)\r\n\r\n        setCarrito(carritoFiltrado);\r\n\r\n    }\r\n\r\n    const addCarrito = (prodId, prodName, prodPrice, prodImg, prodQuantity) => {\r\n\r\n        const EstaEnElCarrito = isInCart(prodId)\r\n\r\n        if (EstaEnElCarrito) {\r\n\r\n            let productoDuplicado = carrito.find(elemento => elemento.id === prodId);\r\n            productoDuplicado.cantidad += prodQuantity;\r\n\r\n            let cartSinRepetido = carrito.filter(elemento => elemento.id !== prodId);\r\n            setCarrito([...cartSinRepetido, productoDuplicado]);\r\n\r\n        }\r\n        else {\r\n\r\n            setCarrito([...carrito, { id: prodId, name: prodName, price: prodPrice, img: prodImg, cantidad: prodQuantity }]);\r\n\r\n        }\r\n\r\n        calculateCantTotal()\r\n        calculatePrecioTotal()\r\n    }\r\n\r\n    const calculateCantTotal = () => {\r\n\r\n        let total = 0\r\n\r\n        for (let i = 0; i < carrito.length; i++) {\r\n            let objeto_producto = carrito[i]\r\n            total = total + (parseInt(objeto_producto.cantidad))\r\n        }\r\n\r\n        return total\r\n    }\r\n\r\n    const calculatePrecioTotal = () => {\r\n\r\n        let precioTotal = 0\r\n\r\n        for (let i = 0; i < carrito.length; i++) {\r\n            let objeto_producto = carrito[i];\r\n            precioTotal = precioTotal + (parseInt(objeto_producto.cantidad) * objeto_producto.price)\r\n        }\r\n\r\n        return parseNumber(precioTotal)\r\n    }\r\n\r\n    const emptyCart = () => {\r\n\r\n        setCarrito([])\r\n        window.localStorage.clear();\r\n    }\r\n\r\n    const parseNumber = (precio) => {\r\n\r\n        let precioPars = precio.toString()\r\n\r\n        if (precioPars.length === 4) {\r\n            precioPars = precioPars.slice(0, 1) + \".\" + precioPars.slice(1, 4);\r\n        }\r\n        else if (precioPars.length === 5) {\r\n            precioPars = precioPars.slice(0, 2) + \".\" + precioPars.slice(2, 5);\r\n        }\r\n        else if (precioPars.length === 6) {\r\n            precioPars = precioPars.slice(0, 3) + \".\" + precioPars.slice(3, 6);\r\n        }\r\n        else if (precioPars.length === 7) {\r\n            precioPars = precioPars.slice(0, 1) + \".\" + precioPars.slice(1, 4) + \".\" + precioPars.slice(4, 7);\r\n        }\r\n\r\n        return precioPars\r\n    }\r\n\r\n    const loadOrder = (id) => {\r\n        setOrder(id)\r\n    }\r\n\r\n    const saveEmail = (email) => {\r\n        setEmail(email)\r\n    }\r\n\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            addCarrito, removeProducto, calculateCantTotal, calculatePrecioTotal,\r\n            emptyCart, parseNumber, carrito, loadOrder, order, saveEmail, email\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Context\r\n","import { Link } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport cartContext from '../../Context/cartContext'\r\nimport './NavBar.scss';\r\n\r\nconst CardWidget = () => {\r\n\r\n    const { calculateCantTotal } = useContext(cartContext)\r\n\r\n    return (\r\n        <>\r\n            <Link className='carritoContainer' to={'/cart'}>\r\n                <img className='carrito' src='https://res.cloudinary.com/dw94zgfgu/image/upload/v1640988719/carrito_vgr69e.png' alt='imagen-carrito'></img>\r\n                <h5 className='cantCarrito'>{calculateCantTotal()}</h5>\r\n            </Link >\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default CardWidget\r\n\r\n\r\n\r\n\r\n","/* rafce */\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ItemCategoryContainer from '../ItemListContainer/ItemCategoryContainer';\r\nimport CardWidget from './CardWidget';\r\nimport './NavBar.scss';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar navbar-expand-lg nav-index\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to={'/'}>\r\n                        <img className=\"logoTesys\" src={'https://res.cloudinary.com/dw94zgfgu/image/upload/v1640988732/logo_pcvqit.png'} alt=\"logo-tesys\" />\r\n                    </Link>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto\">\r\n                            <li className=\"nav-item dropdown\">\r\n                                <Link className=\"active menu-boot m-4\" to={'/'}>\r\n                                    CATEGORIAS\r\n                                </Link>\r\n                                <ul className=\"dropdown-menu submenu-boot p-3\" aria-labelledby=\"navbarDropdown\">\r\n                                    <ItemCategoryContainer />\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown sub-contenido-menu\">\r\n                                <a className=\"active menu-boot m-4\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">SERVICIOS\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"active menu-boot m-4\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">MI CUENTA\r\n                                </a>\r\n                                <ul className=\"dropdown-menu submenu-boot p-3\" aria-labelledby=\"navbarDropdown\">\r\n                                    <Link className=\"misCompras\" to={'/myHistory'}>\r\n                                        Mis compras\r\n                                    </Link>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <CardWidget />\r\n                </div>\r\n            </nav>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react'\r\nimport './Item.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { useContext } from 'react'\r\nimport cartContext from '../../Context/cartContext'\r\n\r\nconst Item = ({ producto }) => {\r\n\r\n    const { parseNumber} = useContext(cartContext)\r\n\r\n    return (\r\n        <div className=\"tarjetas\">\r\n            <div className=\"tarjeta\">\r\n                <div>\r\n                    <Link className=\"tarjeta-contenido\" to={`/detail/${producto.id}`}>\r\n                        <div>\r\n                            <img src={producto.img} alt={producto.name} classNameName=\"cardImg\"></img>\r\n                        </div>\r\n                        <div className=\"tarjeta-contenido-detalle\">\r\n                            <h6 className=\"tarjetaPrecio\">$ {parseNumber(producto.precio)}</h6>\r\n                        </div>\r\n                        <p className=\"cuotas\"> 12 cuotas sin interés</p>\r\n                        <p className=\"detalleProd\">{producto.detail}</p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport Item from '../Item/Item'\r\n\r\nconst ItemList = ({ productos }) => {\r\n    return (\r\n        <div>\r\n            \r\n            {productos.map(product =>\r\n               <Item key={product.id} producto={product} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList\r\n","import ItemList from \"../ItemList/ItemList\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport Loader from \"../../Loader\"\r\nimport { dataBase } from '../../Services/firebase/firebase'\r\nimport { collection, getDocs, query, where, orderBy } from 'firebase/firestore'\r\n\r\n\r\nconst ItemListContainer = (props) => {\r\n\r\n    const style = {\r\n        color: 'white'\r\n    }\r\n\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const { categoryId } = useParams()\r\n\r\n    useEffect(() => {\r\n\r\n        if (categoryId) {\r\n            //consulta firebase por filtros (query)\r\n\r\n            getDocs(query(collection(dataBase, 'productos'), where('category', '==', categoryId))).then((QuerySnapshot) => {\r\n\r\n                const products = QuerySnapshot.docs.map(doc => {\r\n\r\n                    return { id: doc.id, ...doc.data() }\r\n                })\r\n\r\n                setProducts(products)\r\n            }).catch((error) => {\r\n                console.log('Error conexion firebase', error)\r\n            }).finally(() => {\r\n                setLoading(false)\r\n            })\r\n\r\n        }\r\n        else {\r\n\r\n            /* conexion firebase parametros: referencia base de datos y nombre de la coleccion */\r\n            /*    getDocs(query(collection(dataBase, 'productos'), orderBy('precio','desc'))).then((QuerySnapshot) => {\r\n   \r\n                   const products = QuerySnapshot.docs.map(doc => {\r\n   \r\n                       return { id: doc.id, ...doc.data() }\r\n                   })\r\n   \r\n                   setProducts(products)\r\n               }).catch((error) => {\r\n                   console.log('Error conexion firebase', error)\r\n               }).finally(() => {\r\n                   setLoading(false)\r\n               }) */\r\n\r\n            (async () => {\r\n\r\n                try {\r\n\r\n                    const QuerySnapshot = await getDocs(query(collection(dataBase, 'productos'), orderBy('category')))\r\n                    const products = QuerySnapshot.docs.map(doc => {\r\n\r\n                        return { id: doc.id, ...doc.data() }\r\n\r\n                    })\r\n                    setProducts(products)\r\n                    setLoading(false)\r\n                } catch (error) {\r\n                    console.log('error', error)\r\n                }\r\n            })()\r\n\r\n        }\r\n\r\n    }, [categoryId])\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <h1 style={style}>{props.greeting}</h1> */}\r\n            {loading ? <Loader /> : <ItemList productos={products} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemListContainer","import React from 'react'\r\nimport './ItemCount.scss';\r\nimport { useState } from \"react\";\r\nimport { TiPlus } from \"react-icons/ti\";\r\nimport { TiMinus } from \"react-icons/ti\";\r\n\r\nconst ItemCount = ({ onAdd, stock, initial }) => {\r\n\r\n    const [contador, setContador] = useState(initial)\r\n\r\n    /* funciones */\r\n    const increment = () => {\r\n        if (contador < stock) {\r\n            setContador(contador + 1)\r\n        }\r\n    }\r\n\r\n    const decrement = () => {\r\n        if (contador > 1) {\r\n            setContador(contador - 1)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='contenidoCant' >\r\n                <div>\r\n                    <h5>Cantidad: </h5>\r\n                </div>\r\n                <div className='contadorContainer' >\r\n                    <div className='boton' onClick={decrement}>\r\n                        <TiMinus />\r\n                    </div>\r\n                    <h4>{contador}</h4>\r\n                    <div className='boton' onClick={increment}>\r\n                        <TiPlus />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className='botonAgregar' onClick={() => onAdd(contador)}>Agregar al carrito\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCount\r\n","import React from 'react'\r\nimport ItemCount from '../ItemCount/ItemCount'\r\nimport { useState, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Item.scss'\r\nimport cartContext from '../../Context/cartContext'\r\n\r\nconst ItemDetail = ({ item }) => {\r\n\r\n    const [count, setCounter] = useState(0)\r\n    const [btnAgregar, setBtnAgregar] = useState(true)\r\n\r\n    const { addCarrito, parseNumber } = useContext(cartContext)\r\n\r\n    const agregarCarrito = (contador) => {\r\n\r\n        if (item.stock > 0) {\r\n            addCarrito(item.id, item.detail, item.precio, item.img, contador)\r\n            setCounter(contador)\r\n            setBtnAgregar(false)\r\n            const fecha = new Date().toLocaleString();\r\n            console.log(fecha)\r\n            console.log('Se agregaron ' + contador + ' productos al carrito')\r\n\r\n        }\r\n        else {\r\n            alert(\"Disculpe! No contamos con stock disponible\");\r\n        }\r\n    }\r\n\r\n\r\n    const ButtonViewCart = () => {\r\n        return (\r\n            <div>\r\n                <Link to={'/'}>\r\n                    <button className='botonSeguirCompra'>Seguir comprando</button>\r\n                </Link>\r\n                <Link to={'/cart'}>\r\n                    <button className='botonVerCarrito'>Ir al carrito</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const NoStock = () => {\r\n        return (\r\n            <div>\r\n                <h4 className='sinStock'>SIN STOCK</h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"itemDetalle\">\r\n            <div>\r\n                <div>\r\n                    <img className=\"itemImg\" src={item.img} alt={item.name}></img>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h2>{item.detail}</h2>\r\n                <h4 className=\"itemPrecio\">$ {parseNumber(item.precio)}</h4>\r\n                <div className=\"itemCarac\">\r\n                    <p>Caracteristicas principales:</p>\r\n                    <ul>\r\n                        <li>Procesador: {item.proc}</li>\r\n                        <li>Memoria: {item.memory}</li>\r\n                        <li>Disco rigido {item.disk}</li>\r\n                        <li>Sistema operativo: W10</li>\r\n                        <li>Gabinete con fuente de 500 W con teclado y mouse</li>\r\n                    </ul>\r\n                </div>\r\n                {item.stock === 0 ? <NoStock /> : btnAgregar ? <ItemCount onAdd={(contador) => agregarCarrito(contador)} stock={item.stock} initial={1} />\r\n                    : <ButtonViewCart />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemDetail\r\n","import ItemDetail from \"../Item/ItemDetail\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport Loader from \"../../Loader\"\r\nimport { getDoc, doc } from \"firebase/firestore\"\r\nimport { dataBase } from \"../../Services/firebase/firebase\"\r\n\r\n\r\nconst ItemDetailContainer = () => {\r\n\r\n    const [item, setItem] = useState([])\r\n    const { paramId } = useParams()\r\n\r\n    useEffect(() => {\r\n\r\n        getDoc(doc(dataBase, 'productos', paramId)).then((QuerySnapshot) => {\r\n\r\n            const item = { id: QuerySnapshot.id, ...QuerySnapshot.data() }\r\n            setItem(item)\r\n\r\n        }).catch((error) => {\r\n            console.log('Error conexion firebase', error)\r\n        }).finally(() => {\r\n            console.log('finalizo')\r\n        })\r\n\r\n\r\n        return (() => {\r\n            setItem([])\r\n        })\r\n\r\n\r\n    }, [paramId])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {item.length !== 0 ?\r\n                <ItemDetail item={item} />\r\n                : <Loader />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemDetailContainer","import React, { useState, useContext } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport cartContext from '../../Context/cartContext'\r\nimport './FormBuy.scss'\r\nimport { dataBase } from '../../Services/firebase/firebase'\r\nimport { collection, addDoc, writeBatch, getDoc, doc, Timestamp } from 'firebase/firestore'\r\nimport Loader from '../../Loader'\r\n\r\nconst FormBuy = () => {\r\n\r\n    const { carrito, calculatePrecioTotal, emptyCart, loadOrder, saveEmail } = useContext(cartContext)\r\n\r\n    let navigate = useNavigate()\r\n\r\n    const [buying, setBuying] = useState(false)\r\n    const [contact, setContact] = useState({ name: '', email: '', phone: '', comment: '' })\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        setContact({\r\n            ...contact,\r\n            [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const sendData = (event) => {\r\n        event.preventDefault()\r\n        console.log(contact.name + '' + contact.email)\r\n\r\n    }\r\n\r\n\r\n    const confirmOrder = (event) => {\r\n\r\n        setBuying(true)\r\n\r\n        saveEmail(contact.email)\r\n\r\n        event.preventDefault()\r\n\r\n        const newOrder = {\r\n            date: Timestamp.fromDate(new Date()),\r\n            product: carrito,\r\n            total: calculatePrecioTotal(),\r\n            name: contact.name,\r\n            phone: contact.phone,\r\n            email: contact.email,\r\n            comment: contact.comment\r\n        }\r\n\r\n        const batch = writeBatch(dataBase)\r\n        const outOfStock = []\r\n\r\n        newOrder.product.forEach(prod => {\r\n            getDoc(doc(dataBase, 'productos', prod.id)).then((QuerySnapshot) => {\r\n\r\n                if (QuerySnapshot.data().stock >= prod.cantidad) {\r\n                    batch.update(doc(dataBase, 'productos', QuerySnapshot.id),\r\n                        { stock: QuerySnapshot.data().stock - prod.cantidad })\r\n                }\r\n                else {\r\n                    outOfStock.push({ id: QuerySnapshot.id, ...QuerySnapshot.data() })\r\n                }\r\n            })\r\n        });\r\n\r\n        if (outOfStock.length === 0) {\r\n            addDoc(collection(dataBase, 'ordenes'), newOrder).then(({ id }) => {\r\n                batch.commit().then(() => {\r\n                    loadOrder(id)\r\n                })\r\n            }).catch((error) => {\r\n                console.log('Error conexion firebase', error)\r\n            })\r\n        }\r\n\r\n        setTimeout(() => {\r\n            navigate('/purchaseCompleted')\r\n            emptyCart()\r\n            setBuying(false)\r\n        }, 2000)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {buying ? <Loader tipo='comprando' /> :\r\n                <div>\r\n                    <h2 className='titleForm'>¡Tu producto a un paso!</h2>\r\n                    <form onSubmit={confirmOrder}>\r\n                        <div className=\"form-floating mb-3 mt-5\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"floatingInput\" placeholder='name@example.com' name='name' onChange={handleInputChange} required></input>\r\n                            <label className='form-compra' for=\"floatingInput\">Nombre y Apellido</label>\r\n                        </div>\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"floatingInput\" placeholder='name@example.com' name='email' onChange={handleInputChange} required></input>\r\n                            <label className='form-compra' for=\"floatingInput\">Email</label>\r\n                        </div>\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"number\" className=\"form-control\" id=\"floatingInput\" placeholder='name@example.com' name='phone' onChange={handleInputChange} required></input>\r\n                            <label className='form-compra' for=\"floatingInput\">Celular</label>\r\n                        </div>\r\n                        <div className=\"form-floating mb-5\">\r\n                            <textarea className=\"form-control\" id=\"floatingTextarea\" placeholder='name@example.com' name='comment' onChange={handleInputChange}></textarea>\r\n                            <label className='form-compra' for=\"floatingTextarea\">Comentario</label>\r\n                        </div>\r\n                        <button className='btnFinish' type='submit'>Finalizar mi compra</button>\r\n                        <Link to={'/cart'}>\r\n                            <button className='btnCancel'>Cancelar</button>\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormBuy\r\n","import React, { useContext } from 'react'\r\nimport cartContext from '../../Context/cartContext'\r\nimport './PurchaseCompleted.scss'\r\n\r\nconst PurchaseCompleted = () => {\r\n\r\n    const { order } = useContext(cartContext)\r\n\r\n    return (\r\n        <div className='container-compra'>\r\n            <h4 className='detail-compra'>¡Su compra fue realizada con éxito!</h4>\r\n            <h5 className='detail-compra mt-5'>ID # {order}</h5>\r\n            <h6 className='detail-compra mt-5'>Gracias por su compra, enviaremos el comprobante por mail</h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseCompleted\r\n","import React, { useContext } from 'react'\r\nimport cartContext from '../../Context/cartContext'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\n\r\n\r\nconst PrivateRoute = ({ children, privType }) => {\r\n\r\n    const { carrito, order } = useContext(cartContext)\r\n\r\n    if (privType === 'formBuy') {\r\n        return carrito.length === 0 ? <Navigate to='/' /> : children\r\n    }\r\n    else {\r\n        if (privType === 'purchaseCompleted') {    \r\n            return order === '' ? <Navigate to='/' /> : children\r\n        }\r\n    }\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React, { useContext } from 'react'\r\nimport cartContext from '../../Context/cartContext'\r\n\r\nconst History = ({ orden }) => {\r\n\r\n    const { parseNumber } = useContext(cartContext)\r\n\r\n    return (\r\n        <div className=\"order\">\r\n            <div>\r\n                {orden.product.map((prod) =>\r\n                    <li className='order-container'>\r\n                        <div>\r\n                            <img className=\"imgProd\" src={prod.img}></img>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"detalleOrder\">ID {orden.id}</p>\r\n                            <p className=\"detalleOrder\">{prod.name}</p>\r\n                            <p className=\"detalleOrder\">Total $ {parseNumber(prod.price)}</p>\r\n                        </div>\r\n                    </li>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History\r\n","import React from 'react'\r\nimport History from '../Item/History'\r\n\r\nconst HistoryList = ({ordenes}) => {\r\n    return (\r\n        <div>\r\n            <h2 className='order-tit'>Mi historial de compras</h2>\r\n            {ordenes.map(order =>\r\n                <History key={order.id} orden={order} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HistoryList\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport Loader from '../../Loader'\r\nimport { dataBase } from '../../Services/firebase/firebase'\r\nimport { collection, getDocs, query, where, orderBy } from 'firebase/firestore'\r\nimport HistoryList from '../ItemList/HistoryList'\r\nimport cartContext from '../../Context/cartContext'\r\n\r\nconst MyHistory = () => {\r\n\r\n    const { email } = useContext(cartContext)\r\n    const [orders, setOrders] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(email)\r\n\r\n        /* conexion firebase parametros: referencia base de datos y nombre de la coleccion */\r\n        getDocs(query(collection(dataBase, 'ordenes'), where('email', '==', email))).then((QuerySnapshot) => {\r\n\r\n            const orders = QuerySnapshot.docs.map(doc => {\r\n\r\n                return { id: doc.id, ...doc.data() }\r\n            })\r\n\r\n            setOrders(orders)\r\n        }).catch((error) => {\r\n            console.log('Error conexion firebase', error)\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n\r\n\r\n    }, [email])\r\n    return (\r\n        <div>\r\n            {loading ? <Loader /> : <HistoryList ordenes={orders} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyHistory\r\n","import './App.css';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport NavBar from './Components/NavBar/NavBar';\r\nimport ItemListContainer from './Components/ItemListContainer/ItemListContainer'\r\nimport ItemDetailContainer from './Components/ItemListContainer/ItemDetailContainer';\r\nimport Cart from './Components/Cart/Cart';\r\nimport { AddCartContextProvider } from './Context/cartContext';\r\nimport React, { useState } from 'react';\r\nimport FormBuy from './Components/FormBuy/FormBuy';\r\nimport PurchaseCompleted from './Components/PurchaseCompleted/PurchaseCompleted';\r\nimport PrivateRoute from './Components/PrivateRoute/PrivateRoute';\r\nimport MyHistory from './Components/MyHistory/MyHistory';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AddCartContextProvider>\r\n        <BrowserRouter>\r\n          <NavBar />\r\n          <div className=\"App-header\">\r\n            <Routes>\r\n              <Route path='/' element={<ItemListContainer greeting=\"Bienvenidos a la tienda virtual\" />}>\r\n              </Route>\r\n              <Route path='/category/:categoryId' element={<ItemListContainer />}></Route>\r\n              <Route path='/detail/:paramId' element={<ItemDetailContainer />}></Route>\r\n              <Route path='/cart' element={<Cart />}></Route>\r\n              <Route path='/formBuy' element={<PrivateRoute privType='formBuy'><FormBuy /></PrivateRoute>}></Route>\r\n              <Route path='/purchaseCompleted' element={<PrivateRoute privType='purchaseCompleted'><PurchaseCompleted /></PrivateRoute>}></Route>\r\n              <Route path='/myHistory' element={<MyHistory />}></Route>\r\n              <Route path='*' element={<h2>Not found</h2>}></Route>\r\n            </Routes>\r\n          </div>\r\n        </BrowserRouter>\r\n      </AddCartContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n/* bootstrap */\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}